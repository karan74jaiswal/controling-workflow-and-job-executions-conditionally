name: Website Deployment
on: push
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: ${{steps.cache.outputs.cache-hit != 'true'}}
        run: npm ci
      - name: Lint code
        run: npm run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: ${{steps.cache.outputs.cache-hit != 'true'}}
        run: npm ci
      - name: Test code
        id: test-code
        run: npm run test
      - name: Upload test report
        if: ${{failure() && steps.test-code.outcome=='false'}}
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test.json
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: ${{steps.cache.outputs.cache-hit != 'true'}}
        run: npm ci
      - name: Build website
        id: build-website
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
          
  newstep:
    needs: build
    uses: karan74jaiswal/controling-workflow-and-job-executions-conditionally/.github/workflows/reusable-workflow.yml
    with:
      artifact-name: dist-files
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files
      - name: Output contents
        run: ls
      - name: Deploy
        run: echo "Deploying..."

  Generate_Failure_Report:
    if: ${{ failure() }}
    needs: [lint, deploy]
    runs-on: ubuntu-latest
    steps:
      - name: Generating Report
        run: echo "THis is a Failure Report for the Workflow"

  Generate_Success_Report:
    needs: [lint, deploy]
    runs-on: ubuntu-latest
    steps:
      - name: Generating Report
        run: echo "THis is a Passing Report for the Workflow"

  Generate_Linting_Report:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Generating Report
        run: echo "THis is a Linting Report for the Workflow"
